buildscript {
	ext {
		springBootVersion = '2.1.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

plugins {
	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
//apply plugin: 'application'
//mainClassName = 'com.config.server.ConfigServiceApplication.java'

group = 'com.microservicePlayground'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
// Eureka
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	compile('org.springframework.cloud:spring-cloud-config-server')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.boot:spring-boot-starter-web')
	
	//spring cloud bus
	compile "org.springframework.cloud:spring-cloud-config-monitor"
	compile "org.springframework.cloud:spring-cloud-starter-stream-rabbit"
	
	//spring security
	compile "org.springframework.boot:spring-boot-starter-security"
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

docker {
    maintainer = 'chandresh.mishra <chandresh.mishra@accenture.com>'
 }
 
 task buildDocker(type: Docker, dependsOn: build) {
  //push = true
  applicationName = 'configservice'
  tagVersion = '${env.BUILD_NAME}'
  dockerfile = file("${buildDir}/docker/Dockerfile")
  doFirst {
    copy {
      from jar
      into stageDir
      from "src/main/docker/"
      into "${buildDir}/docker"
    }
  }
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
